---
- hosts: worker1
  become: true

  tasks:
    - name: Install LAMP Packages
      apt: name={{ item }}  state=latest
      loop: [ 'apache2', 'mysql-server', 'python3-pymysql', 'php', 'php-mysql', 'libapache2-mod-php' ]

### Apache Configuration
    - name: Only install WordPress when there is no index.php in the path
      stat:
        path: "/var/www/{{ http_host }}"
      register: dir_exists

    - name: Create document root
      file:
        path: "/var/www/{{ http_host }}"
        state: directory
        mode: '0755'
      when: dir_exists.stat.exists == False

    - name: Set up Apache virtualhost
      template:
        src: "files/apache.conf.j2"
        dest: "/etc/apache2/sites-available/{{ http_conf }}"
      notify: Reload Apache

    - name: Enable new site
      shell: /usr/sbin/a2ensite {{ http_conf }}
      notify: Reload Apache

    - name: Disable default Apache site
      shell: /usr/sbin/a2dissite 000-default.conf
      when: disable_default
      notify: Reload Apache

### MySQL Configuration
    - name: Print mysql_root_password
      ansible.builtin.debug:
        var: mysql_root_password
        verbosity: 2


    - name: Sets the root password
      mysql_user:
        name: root
        password: "{{ mysql_root_password }}"
        login_unix_socket: /var/run/mysqld/mysqld.sock
      when: dir_exists.stat.exists == False

    - name: Removes all anonymous user accounts
      mysql_user:
        name: ''
        host_all: yes
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: dir_exists.stat.exists == False

    - name: Removes the MySQL test database
      mysql_db:
        name: test
        state: absent
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: dir_exists.stat.exists == False

    - name: Print mysql_root_password
      ansible.builtin.debug:
        var: mysql_root_password
        verbosity: 2


    - name: Creates database for WordPress
      mysql_db:
        name: "{{ mysql_db }}"
        state: present
        login_user: root
        login_password: "{{ mysql_root_password }}"
      when: dir_exists.stat.exists == False
    
    - name: Create a new database user and password
      mysql_user:
        config_file: "/etc/mysql/my.cnf"
        name: root
        password: "{{mysql_root_password}}"
        priv: '{{mysql_db}}.*:ALL'
        state: present
      when: dir_exists.stat.exists == False
      
### UFW Configuration
    - name: "UFW - Allow HTTP on port {{ http_port }}"
      ufw:
        rule: allow
        port: "{{ http_port }}"
        proto: tcp

### PHP Info Page
    - name: Sets Up PHP Info Page
      template:
        src: "files/info.php.j2"
        dest: "/var/www/{{ http_host }}/info.php"

### WordPress Configuration
    - name: Download and unpack latest WordPress
      unarchive:
        src: https://wordpress.org/latest.tar.gz
        dest: "/var/www/{{ http_host }}"
        remote_src: yes
        creates: "/var/www/{{ http_host }}/wordpress"

    # - name: Set ownership
    #   file:
    #     path: "/var/www/{{ http_host }}"
    #     state: directory
    #     recurse: yes
    #     owner: www-data
    #     group: www-data

    - name: Set permissions for directories
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type d -exec chmod 750 {} \\;"

    - name: Set permissions for files
      shell: "/usr/bin/find /var/www/{{ http_host }}/wordpress/ -type f -exec chmod 640 {} \\;"

    - name: Set up wp-config
      template:
        src: "files/wp-config.php.j2"
        dest: "/var/www/{{ http_host }}/wordpress/wp-config.php"

################# Handlers

  handlers:
    - name: Reload Apache
      service:
        name: apache2
        state: reloaded

    - name: Restart Apache
      service:
        name: apache2
        state: restarted

